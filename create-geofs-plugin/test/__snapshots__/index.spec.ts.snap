// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`integration tests integration test overwrite:false/ 1`] = `
Object {
  ".eslintrc.yml": "env:
  browser: true
  es2021: true
  node: true
extends:
  - eslint:recommended
  - plugin:import/recommended
  - prettier
globals:
  GlassPanel: readonly
  Indicator: readonly
  Object3D: readonly
  Overlay: readonly
  PAGE_PATH: readonly
  PID: readonly
  absMin: readonly
  audio: readonly
  boundHours24: readonly
  clamp: readonly
  clone: readonly
  controls: readonly
  exponentialSmoothing: readonly
  exponentialSmoothingV3: readonly
  fixAngle: readonly
  fixAngle360: readonly
  fixAngles: readonly
  fixAngles360: readonly
  flight: readonly
  geoDecodeLocation: readonly
  geofs: readonly
  getBuildingCollision: readonly
  getURLParameters: readonly
  instruments: readonly
  ll2xy: readonly
  lla2xyz: readonly
  lookAt: readonly
  multiplayer: readonly
  objects: readonly
  rigidBody: readonly
  span: readonly
  ui: readonly
  weather: readonly
  xy2ll: readonly
  xyz2lla: readonly
parserOptions:
  ecmaVersion: latest
  sourceType: module
root: true
rules:
  eqeqeq:
    - error
  import/order:
    - error
    - alphabetize:
        caseInsensitive: true
        order: asc
",
  "package.json": "{
  \\"name\\": \\"geofs-plugin\\",
  \\"version\\": \\"\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"build\\": \\"webpack\\",
    \\"test\\": \\"npm run lint\\"
  },
  \\"templateDeps\\": [
    \\"@babel/core@v7\\",
    \\"@babel/preset-env@v7\\",
    \\"@geps/geofs-types@v1\\",
    \\"babel-loader@v8\\",
    \\"webpack@v5\\",
    \\"webpack-cli@v4\\",
    \\"eslint@v8\\",
    \\"eslint-config-prettier@v8\\",
    \\"eslint-plugin-import@v2\\"
  ]
}",
  "src/index.js": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

// start writing your code here!
// you can reference the geofs apis in intellisense because of the triple-slash directives
// the apis from geofs plugin system are not available yet
",
  "webpack.config.js": "const { join } = require(\\"node:path\\");

/** @type {import(\\"webpack\\").Configuration} */
const config = {
  entry: join(__dirname, \\"src\\", \\"index.js\\"),
  mode: \\"production\\",
  module: {
    rules: [
      {
        test: /\\\\.m?js$/,
        exclude: /node_modules/,
        use: {
          loader: \\"babel-loader\\",
          options: {
            presets: [\\"@babel/preset-env\\"],
          },
        },
      },
    ],
  },
  output: {
    clean: true,
    filename: \\"index.js\\",
    path: join(__dirname, \\"dist\\"),
  },
};

module.exports = config;
",
}
`;

exports[`integration tests integration test overwrite:false//template:react/ 1`] = `
Object {
  ".eslintrc.yml": "env:
  browser: true
  es2021: true
  node: true
extends:
  - plugin:react/recommended
  - plugin:import/typescript
  - prettier
parserOptions:
  ecmaVersion: latest
  sourceType: module
  ecmaFeatures:
    jsx: true
root: true
rules:
  eqeqeq:
    - error
  import/order:
    - error
    - alphabetize:
        caseInsensitive: true
        order: asc
overrides:
  - files:
      - '**/*.js'
    rules:
      '@typescript-eslint/no-var-requires':
        - 'off'
parser: '@typescript-eslint/parser'
plugins:
  - react
settings:
  import/parsers:
    '@typescript-eslint/parser':
      - .ts
      - .tsx
  react:
    version: detect
",
  "package.json": "{
  \\"name\\": \\"geofs-plugin\\",
  \\"version\\": \\"\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"build\\": \\"webpack\\",
    \\"test\\": \\"npm run lint\\"
  },
  \\"templateDeps\\": [
    \\"@babel/core@v7\\",
    \\"@babel/preset-env@v7\\",
    \\"@babel/preset-react@v7\\",
    \\"@geps/geofs-types@v1\\",
    \\"babel-loader@v8\\",
    \\"react@v18\\",
    \\"react-dom@v18\\",
    \\"webpack@v5\\",
    \\"webpack-cli@v4\\",
    \\"eslint@v8\\",
    \\"eslint-config-prettier@v8\\",
    \\"eslint-plugin-import@v2\\",
    \\"eslint-plugin-react@v7\\"
  ]
}",
  "src/App.js": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

import React from \\"react\\";

export function App() {
  // start writing your code here!
  // you can reference the geofs apis in intellisense because of the triple-slash directives
  // the apis from geofs plugin system are not available yet

  return <h1>Test</h1>;
}
",
  "src/index.js": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

import React from \\"react\\";
import { createRoot } from \\"react-dom/client\\";
import { App } from \\"./App\\";

// Replace the selector with a link to your UI host!
// Example: #geofs-ui-right
const root = createRoot(document.querySelector(\\"REPLACE ME\\"));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);
",
  "webpack.config.js": "const { join } = require(\\"node:path\\");

/** @type {import(\\"webpack\\").Configuration} */
const config = {
  entry: join(__dirname, \\"src\\", \\"index.js\\"),
  mode: \\"production\\",
  module: {
    rules: [
      {
        test: /\\\\.m?js$/,
        exclude: /node_modules/,
        use: {
          loader: \\"babel-loader\\",
          options: {
            presets: [\\"@babel/preset-env\\", \\"@babel/preset-react\\"],
          },
        },
      },
    ],
  },
  output: {
    clean: true,
    filename: \\"index.js\\",
    path: join(__dirname, \\"dist\\"),
  },
};

module.exports = config;
",
}
`;

exports[`integration tests integration test overwrite:false//template:react-ts/ 1`] = `
Object {
  ".eslintrc.yml": "env:
  browser: true
  es2021: true
  node: true
extends:
  - plugin:react/recommended
  - plugin:import/typescript
  - prettier
parserOptions:
  ecmaVersion: latest
  sourceType: module
  ecmaFeatures:
    jsx: true
root: true
rules:
  eqeqeq:
    - error
  import/order:
    - error
    - alphabetize:
        caseInsensitive: true
        order: asc
overrides:
  - files:
      - '**/*.js'
    rules:
      '@typescript-eslint/no-var-requires':
        - 'off'
parser: '@typescript-eslint/parser'
plugins:
  - react
settings:
  import/parsers:
    '@typescript-eslint/parser':
      - .ts
      - .tsx
  react:
    version: detect
",
  "package.json": "{
  \\"name\\": \\"geofs-plugin\\",
  \\"version\\": \\"\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"build\\": \\"webpack\\",
    \\"test\\": \\"npm run lint\\"
  },
  \\"templateDeps\\": [
    \\"@geps/geofs-types@v1\\",
    \\"@types/react@v18\\",
    \\"@types/react-dom@v18\\",
    \\"react@v18\\",
    \\"react-dom@v18\\",
    \\"ts-loader@v9\\",
    \\"typescript@v4\\",
    \\"webpack@v5\\",
    \\"webpack-cli@v4\\",
    \\"eslint@v8\\",
    \\"eslint-config-prettier@v8\\",
    \\"eslint-plugin-import@v2\\",
    \\"@typescript-eslint/eslint-plugin@v5\\",
    \\"eslint-import-resolver-typescript@v2\\",
    \\"eslint-plugin-react@v7\\"
  ]
}",
  "src/App.tsx": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

import React from \\"react\\";

export function App() {
  // start writing your code here!
  // you can reference the geofs apis in intellisense because of the triple-slash directives
  // the apis from geofs plugin system are not available yet

  return <h1>Test</h1>;
}
",
  "src/index.tsx": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

import React from \\"react\\";
import { createRoot } from \\"react-dom/client\\";
import { App } from \\"./App\\";

// Replace the selector with a link to your UI host!
// Example: #geofs-ui-right
// eslint-disable-next-line @typescript-eslint/no-non-null-assertion
const root = createRoot(document.querySelector(\\"REPLACE ME\\")!);
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);
",
  "src/tsconfig.json": "{
  \\"compilerOptions\\": {
    \\"target\\": \\"es2015\\",
    \\"module\\": \\"esnext\\",
    \\"esModuleInterop\\": true,
    \\"moduleResolution\\": \\"node\\",
    \\"resolveJsonModule\\": true,
    \\"forceConsistentCasingInFileNames\\": true,
    \\"strict\\": true,
    \\"jsx\\": \\"react\\",
    \\"skipLibCheck\\": true
  },
  \\"include\\": [\\"**/*\\"]
}
",
  "webpack.config.js": "// @ts-check
const { join } = require(\\"node:path\\");

/** @type {import(\\"webpack\\").Configuration} */
const config = {
  entry: join(__dirname, \\"src\\", \\"index.js\\"),
  mode: \\"production\\",
  module: {
    rules: [
      {
        test: /\\\\.tsx?$/,
        exclude: /(node_modules)/,
        use: [
          {
            loader: \\"ts-loader\\",
          },
        ],
      },
    ],
  },
  output: {
    clean: true,
    filename: \\"index.js\\",
    path: join(__dirname, \\"dist\\"),
  },
};

module.exports = config;
",
}
`;

exports[`integration tests integration test overwrite:false//template:typescript/ 1`] = `
Object {
  ".eslintrc.yml": "env:
  browser: true
  es2021: true
  node: true
extends:
  - plugin:@typescript-eslint/recommended
  - plugin:import/typescript
  - prettier
parserOptions:
  ecmaVersion: latest
  sourceType: module
root: true
rules:
  eqeqeq:
    - error
  import/order:
    - error
    - alphabetize:
        caseInsensitive: true
        order: asc
overrides:
  - files:
      - '**/*.js'
    rules:
      '@typescript-eslint/no-var-requires':
        - 'off'
parser: '@typescript-eslint/parser'
plugins:
  - '@typescript-eslint'
settings:
  import/parsers:
    '@typescript-eslint/parser':
      - .ts
      - .tsx
",
  "package.json": "{
  \\"name\\": \\"geofs-plugin\\",
  \\"version\\": \\"\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"build\\": \\"webpack\\",
    \\"test\\": \\"npm run lint\\"
  },
  \\"templateDeps\\": [
    \\"@geps/geofs-types@v1\\",
    \\"ts-loader@v9\\",
    \\"typescript@v4\\",
    \\"webpack@v5\\",
    \\"webpack-cli@v4\\",
    \\"eslint@v8\\",
    \\"eslint-config-prettier@v8\\",
    \\"eslint-plugin-import@v2\\",
    \\"@typescript-eslint/eslint-plugin@v5\\",
    \\"eslint-import-resolver-typescript@v2\\"
  ]
}",
  "src/index.ts": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

// start writing your code here!
// you can reference the geofs apis in intellisense because of the triple-slash directives
// the apis from geofs plugin system are not available yet
",
  "tsconfig.json": "{
  \\"compilerOptions\\": {
    \\"target\\": \\"es2015\\",
    \\"module\\": \\"esnext\\",
    \\"esModuleInterop\\": true,
    \\"moduleResolution\\": \\"node\\",
    \\"resolveJsonModule\\": true,
    \\"forceConsistentCasingInFileNames\\": true,
    \\"strict\\": true,
    \\"skipLibCheck\\": true
  },
  \\"include\\": [\\"**/*\\"]
}
",
  "webpack.config.js": "const { join } = require(\\"node:path\\");

/** @type {import(\\"webpack\\").Configuration} */
const config = {
  entry: join(__dirname, \\"src\\", \\"index.ts\\"),
  mode: \\"production\\",
  module: {
    rules: [
      {
        test: /\\\\.tsx?$/,
        exclude: /(node_modules)/,
        use: [
          {
            loader: \\"ts-loader\\",
          },
        ],
      },
    ],
  },
  resolve: {
    extensions: [\\".tsx\\", \\".ts\\", \\".js\\"],
  },
  output: {
    clean: true,
    filename: \\"index.js\\",
    path: join(__dirname, \\"dist\\"),
  },
};

module.exports = config;
",
}
`;

exports[`integration tests integration test overwrite:true/ 1`] = `
Object {
  ".eslintrc.yml": "env:
  browser: true
  es2021: true
  node: true
extends:
  - eslint:recommended
  - plugin:import/recommended
  - prettier
globals:
  GlassPanel: readonly
  Indicator: readonly
  Object3D: readonly
  Overlay: readonly
  PAGE_PATH: readonly
  PID: readonly
  absMin: readonly
  audio: readonly
  boundHours24: readonly
  clamp: readonly
  clone: readonly
  controls: readonly
  exponentialSmoothing: readonly
  exponentialSmoothingV3: readonly
  fixAngle: readonly
  fixAngle360: readonly
  fixAngles: readonly
  fixAngles360: readonly
  flight: readonly
  geoDecodeLocation: readonly
  geofs: readonly
  getBuildingCollision: readonly
  getURLParameters: readonly
  instruments: readonly
  ll2xy: readonly
  lla2xyz: readonly
  lookAt: readonly
  multiplayer: readonly
  objects: readonly
  rigidBody: readonly
  span: readonly
  ui: readonly
  weather: readonly
  xy2ll: readonly
  xyz2lla: readonly
parserOptions:
  ecmaVersion: latest
  sourceType: module
root: true
rules:
  eqeqeq:
    - error
  import/order:
    - error
    - alphabetize:
        caseInsensitive: true
        order: asc
",
  "package.json": "{
  \\"name\\": \\"geofs-plugin\\",
  \\"version\\": \\"\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"build\\": \\"webpack\\",
    \\"test\\": \\"npm run lint\\"
  },
  \\"templateDeps\\": [
    \\"@babel/core@v7\\",
    \\"@babel/preset-env@v7\\",
    \\"@geps/geofs-types@v1\\",
    \\"babel-loader@v8\\",
    \\"webpack@v5\\",
    \\"webpack-cli@v4\\",
    \\"eslint@v8\\",
    \\"eslint-config-prettier@v8\\",
    \\"eslint-plugin-import@v2\\"
  ]
}",
  "src/index.js": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

// start writing your code here!
// you can reference the geofs apis in intellisense because of the triple-slash directives
// the apis from geofs plugin system are not available yet
",
  "webpack.config.js": "const { join } = require(\\"node:path\\");

/** @type {import(\\"webpack\\").Configuration} */
const config = {
  entry: join(__dirname, \\"src\\", \\"index.js\\"),
  mode: \\"production\\",
  module: {
    rules: [
      {
        test: /\\\\.m?js$/,
        exclude: /node_modules/,
        use: {
          loader: \\"babel-loader\\",
          options: {
            presets: [\\"@babel/preset-env\\"],
          },
        },
      },
    ],
  },
  output: {
    clean: true,
    filename: \\"index.js\\",
    path: join(__dirname, \\"dist\\"),
  },
};

module.exports = config;
",
}
`;

exports[`integration tests integration test overwrite:true//template:react/ 1`] = `
Object {
  ".eslintrc.yml": "env:
  browser: true
  es2021: true
  node: true
extends:
  - plugin:react/recommended
  - plugin:import/typescript
  - prettier
parserOptions:
  ecmaVersion: latest
  sourceType: module
  ecmaFeatures:
    jsx: true
root: true
rules:
  eqeqeq:
    - error
  import/order:
    - error
    - alphabetize:
        caseInsensitive: true
        order: asc
overrides:
  - files:
      - '**/*.js'
    rules:
      '@typescript-eslint/no-var-requires':
        - 'off'
parser: '@typescript-eslint/parser'
plugins:
  - react
settings:
  import/parsers:
    '@typescript-eslint/parser':
      - .ts
      - .tsx
  react:
    version: detect
",
  "package.json": "{
  \\"name\\": \\"geofs-plugin\\",
  \\"version\\": \\"\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"build\\": \\"webpack\\",
    \\"test\\": \\"npm run lint\\"
  },
  \\"templateDeps\\": [
    \\"@babel/core@v7\\",
    \\"@babel/preset-env@v7\\",
    \\"@babel/preset-react@v7\\",
    \\"@geps/geofs-types@v1\\",
    \\"babel-loader@v8\\",
    \\"react@v18\\",
    \\"react-dom@v18\\",
    \\"webpack@v5\\",
    \\"webpack-cli@v4\\",
    \\"eslint@v8\\",
    \\"eslint-config-prettier@v8\\",
    \\"eslint-plugin-import@v2\\",
    \\"eslint-plugin-react@v7\\"
  ]
}",
  "src/App.js": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

import React from \\"react\\";

export function App() {
  // start writing your code here!
  // you can reference the geofs apis in intellisense because of the triple-slash directives
  // the apis from geofs plugin system are not available yet

  return <h1>Test</h1>;
}
",
  "src/index.js": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

import React from \\"react\\";
import { createRoot } from \\"react-dom/client\\";
import { App } from \\"./App\\";

// Replace the selector with a link to your UI host!
// Example: #geofs-ui-right
const root = createRoot(document.querySelector(\\"REPLACE ME\\"));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);
",
  "webpack.config.js": "const { join } = require(\\"node:path\\");

/** @type {import(\\"webpack\\").Configuration} */
const config = {
  entry: join(__dirname, \\"src\\", \\"index.js\\"),
  mode: \\"production\\",
  module: {
    rules: [
      {
        test: /\\\\.m?js$/,
        exclude: /node_modules/,
        use: {
          loader: \\"babel-loader\\",
          options: {
            presets: [\\"@babel/preset-env\\", \\"@babel/preset-react\\"],
          },
        },
      },
    ],
  },
  output: {
    clean: true,
    filename: \\"index.js\\",
    path: join(__dirname, \\"dist\\"),
  },
};

module.exports = config;
",
}
`;

exports[`integration tests integration test overwrite:true//template:react-ts/ 1`] = `
Object {
  ".eslintrc.yml": "env:
  browser: true
  es2021: true
  node: true
extends:
  - plugin:react/recommended
  - plugin:import/typescript
  - prettier
parserOptions:
  ecmaVersion: latest
  sourceType: module
  ecmaFeatures:
    jsx: true
root: true
rules:
  eqeqeq:
    - error
  import/order:
    - error
    - alphabetize:
        caseInsensitive: true
        order: asc
overrides:
  - files:
      - '**/*.js'
    rules:
      '@typescript-eslint/no-var-requires':
        - 'off'
parser: '@typescript-eslint/parser'
plugins:
  - react
settings:
  import/parsers:
    '@typescript-eslint/parser':
      - .ts
      - .tsx
  react:
    version: detect
",
  "package.json": "{
  \\"name\\": \\"geofs-plugin\\",
  \\"version\\": \\"\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"build\\": \\"webpack\\",
    \\"test\\": \\"npm run lint\\"
  },
  \\"templateDeps\\": [
    \\"@geps/geofs-types@v1\\",
    \\"@types/react@v18\\",
    \\"@types/react-dom@v18\\",
    \\"react@v18\\",
    \\"react-dom@v18\\",
    \\"ts-loader@v9\\",
    \\"typescript@v4\\",
    \\"webpack@v5\\",
    \\"webpack-cli@v4\\",
    \\"eslint@v8\\",
    \\"eslint-config-prettier@v8\\",
    \\"eslint-plugin-import@v2\\",
    \\"@typescript-eslint/eslint-plugin@v5\\",
    \\"eslint-import-resolver-typescript@v2\\",
    \\"eslint-plugin-react@v7\\"
  ]
}",
  "src/App.tsx": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

import React from \\"react\\";

export function App() {
  // start writing your code here!
  // you can reference the geofs apis in intellisense because of the triple-slash directives
  // the apis from geofs plugin system are not available yet

  return <h1>Test</h1>;
}
",
  "src/index.tsx": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

import React from \\"react\\";
import { createRoot } from \\"react-dom/client\\";
import { App } from \\"./App\\";

// Replace the selector with a link to your UI host!
// Example: #geofs-ui-right
// eslint-disable-next-line @typescript-eslint/no-non-null-assertion
const root = createRoot(document.querySelector(\\"REPLACE ME\\")!);
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);
",
  "src/tsconfig.json": "{
  \\"compilerOptions\\": {
    \\"target\\": \\"es2015\\",
    \\"module\\": \\"esnext\\",
    \\"esModuleInterop\\": true,
    \\"moduleResolution\\": \\"node\\",
    \\"resolveJsonModule\\": true,
    \\"forceConsistentCasingInFileNames\\": true,
    \\"strict\\": true,
    \\"jsx\\": \\"react\\",
    \\"skipLibCheck\\": true
  },
  \\"include\\": [\\"**/*\\"]
}
",
  "webpack.config.js": "// @ts-check
const { join } = require(\\"node:path\\");

/** @type {import(\\"webpack\\").Configuration} */
const config = {
  entry: join(__dirname, \\"src\\", \\"index.js\\"),
  mode: \\"production\\",
  module: {
    rules: [
      {
        test: /\\\\.tsx?$/,
        exclude: /(node_modules)/,
        use: [
          {
            loader: \\"ts-loader\\",
          },
        ],
      },
    ],
  },
  output: {
    clean: true,
    filename: \\"index.js\\",
    path: join(__dirname, \\"dist\\"),
  },
};

module.exports = config;
",
}
`;

exports[`integration tests integration test overwrite:true//template:typescript/ 1`] = `
Object {
  ".eslintrc.yml": "env:
  browser: true
  es2021: true
  node: true
extends:
  - plugin:@typescript-eslint/recommended
  - plugin:import/typescript
  - prettier
parserOptions:
  ecmaVersion: latest
  sourceType: module
root: true
rules:
  eqeqeq:
    - error
  import/order:
    - error
    - alphabetize:
        caseInsensitive: true
        order: asc
overrides:
  - files:
      - '**/*.js'
    rules:
      '@typescript-eslint/no-var-requires':
        - 'off'
parser: '@typescript-eslint/parser'
plugins:
  - '@typescript-eslint'
settings:
  import/parsers:
    '@typescript-eslint/parser':
      - .ts
      - .tsx
",
  "package.json": "{
  \\"name\\": \\"geofs-plugin\\",
  \\"version\\": \\"\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"build\\": \\"webpack\\",
    \\"test\\": \\"npm run lint\\"
  },
  \\"templateDeps\\": [
    \\"@geps/geofs-types@v1\\",
    \\"ts-loader@v9\\",
    \\"typescript@v4\\",
    \\"webpack@v5\\",
    \\"webpack-cli@v4\\",
    \\"eslint@v8\\",
    \\"eslint-config-prettier@v8\\",
    \\"eslint-plugin-import@v2\\",
    \\"@typescript-eslint/eslint-plugin@v5\\",
    \\"eslint-import-resolver-typescript@v2\\"
  ]
}",
  "src/index.ts": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

// start writing your code here!
// you can reference the geofs apis in intellisense because of the triple-slash directives
// the apis from geofs plugin system are not available yet
",
  "tsconfig.json": "{
  \\"compilerOptions\\": {
    \\"target\\": \\"es2015\\",
    \\"module\\": \\"esnext\\",
    \\"esModuleInterop\\": true,
    \\"moduleResolution\\": \\"node\\",
    \\"resolveJsonModule\\": true,
    \\"forceConsistentCasingInFileNames\\": true,
    \\"strict\\": true,
    \\"skipLibCheck\\": true
  },
  \\"include\\": [\\"**/*\\"]
}
",
  "webpack.config.js": "const { join } = require(\\"node:path\\");

/** @type {import(\\"webpack\\").Configuration} */
const config = {
  entry: join(__dirname, \\"src\\", \\"index.ts\\"),
  mode: \\"production\\",
  module: {
    rules: [
      {
        test: /\\\\.tsx?$/,
        exclude: /(node_modules)/,
        use: [
          {
            loader: \\"ts-loader\\",
          },
        ],
      },
    ],
  },
  resolve: {
    extensions: [\\".tsx\\", \\".ts\\", \\".js\\"],
  },
  output: {
    clean: true,
    filename: \\"index.js\\",
    path: join(__dirname, \\"dist\\"),
  },
};

module.exports = config;
",
}
`;

exports[`integration tests integration test template:react/ 1`] = `
Object {
  ".eslintrc.yml": "env:
  browser: true
  es2021: true
  node: true
extends:
  - plugin:react/recommended
  - plugin:import/typescript
  - prettier
parserOptions:
  ecmaVersion: latest
  sourceType: module
  ecmaFeatures:
    jsx: true
root: true
rules:
  eqeqeq:
    - error
  import/order:
    - error
    - alphabetize:
        caseInsensitive: true
        order: asc
overrides:
  - files:
      - '**/*.js'
    rules:
      '@typescript-eslint/no-var-requires':
        - 'off'
parser: '@typescript-eslint/parser'
plugins:
  - react
settings:
  import/parsers:
    '@typescript-eslint/parser':
      - .ts
      - .tsx
  react:
    version: detect
",
  "package.json": "{
  \\"name\\": \\"geofs-plugin\\",
  \\"version\\": \\"\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"build\\": \\"webpack\\",
    \\"test\\": \\"npm run lint\\"
  },
  \\"templateDeps\\": [
    \\"@babel/core@v7\\",
    \\"@babel/preset-env@v7\\",
    \\"@babel/preset-react@v7\\",
    \\"@geps/geofs-types@v1\\",
    \\"babel-loader@v8\\",
    \\"react@v18\\",
    \\"react-dom@v18\\",
    \\"webpack@v5\\",
    \\"webpack-cli@v4\\",
    \\"eslint@v8\\",
    \\"eslint-config-prettier@v8\\",
    \\"eslint-plugin-import@v2\\",
    \\"eslint-plugin-react@v7\\"
  ]
}",
  "src/App.js": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

import React from \\"react\\";

export function App() {
  // start writing your code here!
  // you can reference the geofs apis in intellisense because of the triple-slash directives
  // the apis from geofs plugin system are not available yet

  return <h1>Test</h1>;
}
",
  "src/index.js": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

import React from \\"react\\";
import { createRoot } from \\"react-dom/client\\";
import { App } from \\"./App\\";

// Replace the selector with a link to your UI host!
// Example: #geofs-ui-right
const root = createRoot(document.querySelector(\\"REPLACE ME\\"));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);
",
  "webpack.config.js": "const { join } = require(\\"node:path\\");

/** @type {import(\\"webpack\\").Configuration} */
const config = {
  entry: join(__dirname, \\"src\\", \\"index.js\\"),
  mode: \\"production\\",
  module: {
    rules: [
      {
        test: /\\\\.m?js$/,
        exclude: /node_modules/,
        use: {
          loader: \\"babel-loader\\",
          options: {
            presets: [\\"@babel/preset-env\\", \\"@babel/preset-react\\"],
          },
        },
      },
    ],
  },
  output: {
    clean: true,
    filename: \\"index.js\\",
    path: join(__dirname, \\"dist\\"),
  },
};

module.exports = config;
",
}
`;

exports[`integration tests integration test template:react-ts/ 1`] = `
Object {
  ".eslintrc.yml": "env:
  browser: true
  es2021: true
  node: true
extends:
  - plugin:react/recommended
  - plugin:import/typescript
  - prettier
parserOptions:
  ecmaVersion: latest
  sourceType: module
  ecmaFeatures:
    jsx: true
root: true
rules:
  eqeqeq:
    - error
  import/order:
    - error
    - alphabetize:
        caseInsensitive: true
        order: asc
overrides:
  - files:
      - '**/*.js'
    rules:
      '@typescript-eslint/no-var-requires':
        - 'off'
parser: '@typescript-eslint/parser'
plugins:
  - react
settings:
  import/parsers:
    '@typescript-eslint/parser':
      - .ts
      - .tsx
  react:
    version: detect
",
  "package.json": "{
  \\"name\\": \\"geofs-plugin\\",
  \\"version\\": \\"\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"build\\": \\"webpack\\",
    \\"test\\": \\"npm run lint\\"
  },
  \\"templateDeps\\": [
    \\"@geps/geofs-types@v1\\",
    \\"@types/react@v18\\",
    \\"@types/react-dom@v18\\",
    \\"react@v18\\",
    \\"react-dom@v18\\",
    \\"ts-loader@v9\\",
    \\"typescript@v4\\",
    \\"webpack@v5\\",
    \\"webpack-cli@v4\\",
    \\"eslint@v8\\",
    \\"eslint-config-prettier@v8\\",
    \\"eslint-plugin-import@v2\\",
    \\"@typescript-eslint/eslint-plugin@v5\\",
    \\"eslint-import-resolver-typescript@v2\\",
    \\"eslint-plugin-react@v7\\"
  ]
}",
  "src/App.tsx": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

import React from \\"react\\";

export function App() {
  // start writing your code here!
  // you can reference the geofs apis in intellisense because of the triple-slash directives
  // the apis from geofs plugin system are not available yet

  return <h1>Test</h1>;
}
",
  "src/index.tsx": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

import React from \\"react\\";
import { createRoot } from \\"react-dom/client\\";
import { App } from \\"./App\\";

// Replace the selector with a link to your UI host!
// Example: #geofs-ui-right
// eslint-disable-next-line @typescript-eslint/no-non-null-assertion
const root = createRoot(document.querySelector(\\"REPLACE ME\\")!);
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);
",
  "src/tsconfig.json": "{
  \\"compilerOptions\\": {
    \\"target\\": \\"es2015\\",
    \\"module\\": \\"esnext\\",
    \\"esModuleInterop\\": true,
    \\"moduleResolution\\": \\"node\\",
    \\"resolveJsonModule\\": true,
    \\"forceConsistentCasingInFileNames\\": true,
    \\"strict\\": true,
    \\"jsx\\": \\"react\\",
    \\"skipLibCheck\\": true
  },
  \\"include\\": [\\"**/*\\"]
}
",
  "webpack.config.js": "// @ts-check
const { join } = require(\\"node:path\\");

/** @type {import(\\"webpack\\").Configuration} */
const config = {
  entry: join(__dirname, \\"src\\", \\"index.js\\"),
  mode: \\"production\\",
  module: {
    rules: [
      {
        test: /\\\\.tsx?$/,
        exclude: /(node_modules)/,
        use: [
          {
            loader: \\"ts-loader\\",
          },
        ],
      },
    ],
  },
  output: {
    clean: true,
    filename: \\"index.js\\",
    path: join(__dirname, \\"dist\\"),
  },
};

module.exports = config;
",
}
`;

exports[`integration tests integration test template:typescript/ 1`] = `
Object {
  ".eslintrc.yml": "env:
  browser: true
  es2021: true
  node: true
extends:
  - plugin:@typescript-eslint/recommended
  - plugin:import/typescript
  - prettier
parserOptions:
  ecmaVersion: latest
  sourceType: module
root: true
rules:
  eqeqeq:
    - error
  import/order:
    - error
    - alphabetize:
        caseInsensitive: true
        order: asc
overrides:
  - files:
      - '**/*.js'
    rules:
      '@typescript-eslint/no-var-requires':
        - 'off'
parser: '@typescript-eslint/parser'
plugins:
  - '@typescript-eslint'
settings:
  import/parsers:
    '@typescript-eslint/parser':
      - .ts
      - .tsx
",
  "package.json": "{
  \\"name\\": \\"geofs-plugin\\",
  \\"version\\": \\"\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"build\\": \\"webpack\\",
    \\"test\\": \\"npm run lint\\"
  },
  \\"templateDeps\\": [
    \\"@geps/geofs-types@v1\\",
    \\"ts-loader@v9\\",
    \\"typescript@v4\\",
    \\"webpack@v5\\",
    \\"webpack-cli@v4\\",
    \\"eslint@v8\\",
    \\"eslint-config-prettier@v8\\",
    \\"eslint-plugin-import@v2\\",
    \\"@typescript-eslint/eslint-plugin@v5\\",
    \\"eslint-import-resolver-typescript@v2\\"
  ]
}",
  "src/index.ts": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

// start writing your code here!
// you can reference the geofs apis in intellisense because of the triple-slash directives
// the apis from geofs plugin system are not available yet
",
  "tsconfig.json": "{
  \\"compilerOptions\\": {
    \\"target\\": \\"es2015\\",
    \\"module\\": \\"esnext\\",
    \\"esModuleInterop\\": true,
    \\"moduleResolution\\": \\"node\\",
    \\"resolveJsonModule\\": true,
    \\"forceConsistentCasingInFileNames\\": true,
    \\"strict\\": true,
    \\"skipLibCheck\\": true
  },
  \\"include\\": [\\"**/*\\"]
}
",
  "webpack.config.js": "const { join } = require(\\"node:path\\");

/** @type {import(\\"webpack\\").Configuration} */
const config = {
  entry: join(__dirname, \\"src\\", \\"index.ts\\"),
  mode: \\"production\\",
  module: {
    rules: [
      {
        test: /\\\\.tsx?$/,
        exclude: /(node_modules)/,
        use: [
          {
            loader: \\"ts-loader\\",
          },
        ],
      },
    ],
  },
  resolve: {
    extensions: [\\".tsx\\", \\".ts\\", \\".js\\"],
  },
  output: {
    clean: true,
    filename: \\"index.js\\",
    path: join(__dirname, \\"dist\\"),
  },
};

module.exports = config;
",
}
`;

exports[`integration tests integration test vanilla 1`] = `
Object {
  ".eslintrc.yml": "env:
  browser: true
  es2021: true
  node: true
extends:
  - eslint:recommended
  - plugin:import/recommended
  - prettier
globals:
  GlassPanel: readonly
  Indicator: readonly
  Object3D: readonly
  Overlay: readonly
  PAGE_PATH: readonly
  PID: readonly
  absMin: readonly
  audio: readonly
  boundHours24: readonly
  clamp: readonly
  clone: readonly
  controls: readonly
  exponentialSmoothing: readonly
  exponentialSmoothingV3: readonly
  fixAngle: readonly
  fixAngle360: readonly
  fixAngles: readonly
  fixAngles360: readonly
  flight: readonly
  geoDecodeLocation: readonly
  geofs: readonly
  getBuildingCollision: readonly
  getURLParameters: readonly
  instruments: readonly
  ll2xy: readonly
  lla2xyz: readonly
  lookAt: readonly
  multiplayer: readonly
  objects: readonly
  rigidBody: readonly
  span: readonly
  ui: readonly
  weather: readonly
  xy2ll: readonly
  xyz2lla: readonly
parserOptions:
  ecmaVersion: latest
  sourceType: module
root: true
rules:
  eqeqeq:
    - error
  import/order:
    - error
    - alphabetize:
        caseInsensitive: true
        order: asc
",
  "package.json": "{
  \\"name\\": \\"geofs-plugin\\",
  \\"version\\": \\"\\",
  \\"private\\": true,
  \\"scripts\\": {
    \\"build\\": \\"webpack\\",
    \\"test\\": \\"npm run lint\\"
  },
  \\"templateDeps\\": [
    \\"@babel/core@v7\\",
    \\"@babel/preset-env@v7\\",
    \\"@geps/geofs-types@v1\\",
    \\"babel-loader@v8\\",
    \\"webpack@v5\\",
    \\"webpack-cli@v4\\",
    \\"eslint@v8\\",
    \\"eslint-config-prettier@v8\\",
    \\"eslint-plugin-import@v2\\"
  ]
}",
  "src/index.js": "/// <reference types=\\"jquery\\" />
/// <reference types=\\"@geps/geofs-types\\" />

// start writing your code here!
// you can reference the geofs apis in intellisense because of the triple-slash directives
// the apis from geofs plugin system are not available yet
",
  "webpack.config.js": "const { join } = require(\\"node:path\\");

/** @type {import(\\"webpack\\").Configuration} */
const config = {
  entry: join(__dirname, \\"src\\", \\"index.js\\"),
  mode: \\"production\\",
  module: {
    rules: [
      {
        test: /\\\\.m?js$/,
        exclude: /node_modules/,
        use: {
          loader: \\"babel-loader\\",
          options: {
            presets: [\\"@babel/preset-env\\"],
          },
        },
      },
    ],
  },
  output: {
    clean: true,
    filename: \\"index.js\\",
    path: join(__dirname, \\"dist\\"),
  },
};

module.exports = config;
",
}
`;
